name: 'variants-switch'
description: 'Switch to a custom variant of your deployment flavours. This requires Variants (https://github.com/Backbase/variants)'
author: 'Backbase B.V. <oss@backbase.com>'
branding:
  icon: "code"
  color: "blue"
  
inputs:
  spec:
    description: 'Specify the path to a Variants YAML configuration spec. Default is "variants.yml".'
    required: false
    default: 'variants.yml'
  platform:
    description: '"ios" or "android".'
    required: false
  variant:
    description: 'Variant you would like to switch to.'
    required: true
    default: 'default'
  verbose:
    description: 'Log tech details for nerds.'
    required: true
    default: false

runs:
  using: "composite"
  steps:
    - name: Add PROJECT_PATH to GITHUB_ENV
      shell: bash
      run: |
        echo "project_path=$(pwd)" >> $GITHUB_ENV
          
    - name: Variants Switch
      shell: bash
      run: |
        echo "Repository: ${{ github.repository }}"
        cd ${{ github.action_path }}
        make ci
        cd ${{ env.project_path }}
        
        echo "Platform value is ===> ${{ inputs.platform }}"
        if [ ! -z "$inputs.platform" ]
        then
            echo "Platform is not null or space"
            echo "Verbose value is ===> ${{ inputs.verbose }}"
            if ${{ inputs.verbose }}
            then
                variants switch \
                --spec ${{ inputs.spec }} \
                --variant ${{ inputs.variant }} \
                --verbose
            else
                variants switch \
                --spec ${{ inputs.spec }} \
                --variant ${{ inputs.variant }}
            fi
        else
            echo "Verbose value in else case ===> ${{ inputs.verbose }}"
            if ${{ inputs.verbose }}
            then
                variants switch \
                --spec ${{ inputs.spec }} \
                --variant ${{ inputs.variant }} \
                --platform ${{ inputs.platform }} \
                --verbose
            else
                variants switch \
                --spec ${{ inputs.spec }} \
                --variant ${{ inputs.variant }} \
                --platform ${{ inputs.platform }}
            fi
        fi
